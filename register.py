# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Register.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class facialRegister(object):
    def setupUi(self, Frame):
        Frame.setObjectName("Frame")
        Frame.resize(532, 643)
        Frame.setStyleSheet("background-color: rgb(142, 213, 227)")
        
        self.label = QtWidgets.QLabel(Frame)
        self.label.setGeometry(QtCore.QRect(10, 10, 501, 341))
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        
        self.label_2 = QtWidgets.QLabel(Frame)
        self.label_2.setGeometry(QtCore.QRect(10, 400, 501, 41))
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        
        self.lineEdit = QtWidgets.QLineEdit(Frame)
        self.lineEdit.setGeometry(QtCore.QRect(10, 479, 511, 61))
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        
        self.pushButton = QtWidgets.QPushButton(Frame)
        self.pushButton.setGeometry(QtCore.QRect(20, 562, 491, 61))
        self.pushButton.setObjectName("pushButton")

        # connect the close event to the method
        Frame.closeEvent = self.closeEvent
        
        self.retranslateUi(Frame)
        QtCore.QMetaObject.connectSlotsByName(Frame)

    def retranslateUi(self, Frame):
        _translate = QtCore.QCoreApplication.translate
        Frame.setWindowTitle(_translate("Frame", "Frame"))
        self.label.setText(_translate("Frame", "Loading"))
        self.label_2.setText(_translate("Frame", "Status"))
        self.pushButton.setText(_translate("Frame", "Create folder"))

    # when close the frame
    def closeEvent(self, event):
        # show a message box asking for confirmation
        reply = QtWidgets.QMessageBox.question(None, 'Smart AIoT',
            "Are you sure you want to exit?", QtWidgets.QMessageBox.Yes |
            QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.No)

        # if the user confirms, exit the application
        if reply == QtWidgets.QMessageBox.Yes:
            QtWidgets.qApp.quit()
        else:
            event.ignore()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Frame = QtWidgets.QFrame()
    ui = facialRegister()
    ui.setupUi(Frame)
    Frame.show()
    sys.exit(app.exec_())
