{"version":3,"file":"static/js/307.ba24e8e2.chunk.js","mappings":"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","sources":["Components/Forms/RegisterForm/TokenForm.jsx","Components/Forms/RegisterForm/RegisterForm.jsx","Components/Forms/RegisterForm/index.js"],"sourcesContent":["import React from 'react'\r\n\r\n// import styles of this component\r\nimport styles from '../Forms.module.css'\r\n\r\n// import other pkgs\r\nimport { Button, Col, Container, FloatingLabel, Form, Image, Row, Stack } from 'react-bootstrap'\r\n\r\nimport LOGO from '../../../Images/Arash.jpg'\r\n\r\n// Verify Token\r\nimport { verifyToken } from '../../../utils/Firebase/Database/Database' \r\n\r\nconst TokenForm = (props) => {\r\n  // for set Token\r\n  const [token,setToken] = React.useState(\"\")\r\n  const [error,setError] = React.useState(false)\r\n  // const [locker,setLocker] = React.useState()\r\n\r\n\r\n  return (\r\n    <Container fluid className={`${styles.container} d-flex justify-content-center align-items-center px-3`}>\r\n  \r\n  {/* Token Form containers */}\r\n    <Container className={`${styles.LoginContainer} d-flex justify-content-center align-items-center bg-white`}>\r\n      <Container>\r\n                \r\n        <Row xs={12} className=\"justify-content-center align-items-center\">\r\n\r\n          {/* Title */}\r\n          <Col xs={12} md={12}>\r\n            <Stack gap={1} style={{ padding:\"20px\", marginTop:\"80px\"}} className={`d-flex justify-content-center align-items-center`}>\r\n                            \r\n              {/* Logo */}\r\n              <Image \r\n              src={LOGO}\r\n              style={{ width: '100px', height: '100px' }}\r\n              roundedCircle />\r\n\r\n              {/* Tutle */}\r\n              <div className=\"h3\" \r\n              style={{\r\n                backgroundImage: 'linear-gradient(to right, rgb(61, 152, 154) 0%, rgb(12, 14, 36) 100%)',\r\n                WebkitBackgroundClip: 'text',\r\n                color: 'transparent',\r\n                display: 'inline',\r\n                whiteSpace: \"nowrap\"\r\n              }}>AIoT Smartlock</div>\r\n\r\n              {/* Slogan */}\r\n              <div className=\"blockquote\" \r\n              style={{\r\n                backgroundImage: 'linear-gradient(to right, rgb(61, 152, 154) 0%, rgb(12, 14, 36) 100%)',\r\n                WebkitBackgroundClip: 'text',\r\n                color: 'transparent',\r\n                display: 'inline',\r\n                textAlign: \"center\"\r\n              }}>Please enter your token code</div>\r\n\r\n            </Stack> \r\n          </Col>\r\n                            \r\n          {/* Registration Form */}\r\n          <Col xs={12} md={12}>     \r\n            <Stack gap={2} className=\"col-md-10 mx-auto\">\r\n\r\n              {/* Token Field */}\r\n              <FloatingLabel\r\n              controlId=\"floatingInput\"\r\n              label=\"Token ID\"\r\n              className=\"mb-1\">\r\n                <Form.Control type=\"text\" placeholder=\"EX: XXXXXX\"\r\n                value={token}\r\n                onChange={e=>setToken(e.target.value)}\r\n                />\r\n              </FloatingLabel>\r\n        \r\n\r\n            </Stack>\r\n            \r\n          </Col>\r\n\r\n          {/* Login ?*/}\r\n          <Col xs={12} md={12}>   \r\n            <Stack gap={1} className={`d-flex justify-content-center align-items-center`}> \r\n            {error && <div className=\"text-danger mb-3\">Invalid Token</div>}\r\n\r\n              <div className=\"text\" \r\n              style={{\r\n                backgroundImage: 'linear-gradient(to right, rgb(61, 152, 154) 0%, rgb(12, 14, 36) 100%)',\r\n                WebkitBackgroundClip: 'text',\r\n                color: 'transparent',\r\n                display: 'inline',\r\n                textAlign: \"center\"\r\n              }}\r\n\r\n              >Already have account ? <a className=\"text\"  href='/'> <strong> Log in </strong></a></div>\r\n\r\n            </Stack>  \r\n          </Col>\r\n                            \r\n          {/* verify Token*/}\r\n          <Col xs={12} md={11} style={{ marginTop:\"10px\", marginBottom:\"100px\"}} className='row row-cols-2 justify-content-center align-items-center'>\r\n                            \r\n            {/* Cancel Account */}\r\n            <Col xs={12} md={5} sm={12} className='row row-cols-1 m-1'>\r\n              <Button \r\n              variant=\"primary\" \r\n              style={{\r\n                background: 'white',\r\n                color: 'rgb(61, 152, 154)',\r\n                border: \"2px solid rgb(61, 152, 154)\",\r\n                padding:\"10px\",\r\n                borderRadius:\"10px\"\r\n              }}\r\n              onClick={()=>{\r\n                \r\n                // setError(true)\r\n\r\n                verifyToken(token)\r\n                  .then(rsult=>{\r\n                    props.setTokenShow(rsult.status);\r\n                    props.setLocker(rsult.locker)\r\n                    // console.log(rsult.locker)\r\n                    setError(!rsult.status)\r\n                  })\r\n                  .catch(err=>{\r\n                    props.setTokenShow(err);\r\n                    setError(true)\r\n                  })\r\n              }}\r\n              >\r\n                Verify Token\r\n              </Button>\r\n            </Col>\r\n\r\n          </Col>\r\n\r\n                            \r\n\r\n        </Row>\r\n\r\n        </Container>\r\n    </Container>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default TokenForm","\r\n// import styles of this component\r\nimport styles from '../Forms.module.css'\r\n\r\n// import other pkgs\r\nimport { Button, Col, Container, FloatingLabel, Form, Image, Row, Stack } from 'react-bootstrap'\r\n\r\n// validation\r\nimport { SignUp_userSchema } from \"../../../utils/Validation/Validation\"\r\n\r\n// Create ACCOUNT\r\nimport { createAccount } from \"../../../utils/Firebase/Authentication/Authentication\"\r\n\r\nimport LOGO from '../../../Images/Arash.jpg'\r\nimport React from 'react'\r\n\r\n// Token Account\r\nimport TokenForm from './TokenForm'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst RegisterForm = () => {\r\n\r\n\r\n    // ********* FOR SETTING UP THE TOKEN ********* //\r\n\r\n    const [tokenShow,setTokenShow] = React.useState(false)\r\n\r\n    const [locker,setLocker] = React.useState()\r\n\r\n    // ********* cREATE ACCOUNT ********* //\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [userDetails,setUserDetails] = React.useState({\r\n        FirstName: \"\",\r\n        LastName: \"\",\r\n        Email : \"\",\r\n        NewPassword:\"\"\r\n    })\r\n\r\n    const [error, setError] = React.useState({\r\n        firstName: false,\r\n        firstNameError: \"\",\r\n\r\n        lastName: false,\r\n        lastNameError: \"\",\r\n\r\n        email: false,\r\n        emailError: \"\",\r\n\r\n        password: false,\r\n        passwordError: \"\"\r\n    })\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setUserDetails((prevUser) => ({\r\n          ...prevUser,\r\n          [name]: value,\r\n        }));\r\n    };\r\n\r\n    const createAccountss = async (event) => {\r\n        try {\r\n            await SignUp_userSchema.validate({ \r\n                FirstName: userDetails.FirstName, \r\n                LastName: userDetails.LastName,\r\n                Email: userDetails.Email, \r\n                NewPassword: userDetails.NewPassword \r\n            }, { abortEarly: false });\r\n\r\n\r\n            createAccount(\r\n                userDetails.Email, \r\n                userDetails.NewPassword, \r\n                userDetails.LastName, \r\n                userDetails.FirstName,\r\n                locker)\r\n            .then(result=>{\r\n        \r\n                    setError(\r\n                        {\r\n                            firstName: false,\r\n                            firstNameError: \"\",\r\n                    \r\n                            lastName: false,\r\n                            lastNameError: \"\",\r\n                    \r\n                            email: false,\r\n                            emailError: \"\",\r\n                    \r\n                            password: false,\r\n                            passwordError: \"\"\r\n                          }\r\n                    )\r\n\r\n                    window.location.reload()\r\n                })\r\n      \r\n\r\n\r\n        } catch (validationError) {\r\n\r\n            // Extract specific error messages for email and password\r\n            const firstnameError = validationError.inner.find((error) => error.path === 'FirstName');\r\n            const lastnameError = validationError.inner.find((error) => error.path === 'LastName');\r\n            const emailError = validationError.inner.find((error) => error.path === 'Email');\r\n            const passwordError = validationError.inner.find((error) => error.path === 'NewPassword');\r\n\r\n      // If validation errors occur\r\n            setError({\r\n\r\n                firstName: !!firstnameError,\r\n                firstNameError: firstnameError && firstnameError.message,\r\n        \r\n                lastName: !!lastnameError,\r\n                lastNameError: lastnameError && lastnameError.message,\r\n\r\n                email: !!emailError,\r\n                emailError: emailError && emailError.message,\r\n\r\n                password: !!passwordError,\r\n                passwordError: passwordError && passwordError.message\r\n            });\r\n      \r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            {!tokenShow && <TokenForm setTokenShow={setTokenShow} setLocker={setLocker} />}\r\n\r\n            {tokenShow && \r\n                <Container fluid className={`${styles.container} d-flex justify-content-center align-items-center px-2.5`}>\r\n                    \r\n                    {/* Reg Form containers */}\r\n                    <Container className={`${styles.LoginContainer} d-flex justify-content-center align-items-center bg-white`}>\r\n                        <Container>\r\n                    \r\n                            <Row xs={12} className=\"justify-content-center align-items-center\">\r\n\r\n                                {/* Title */}\r\n                                <Col xs={12} md={12}>\r\n                                    <Stack gap={1} style={{ padding:\"20px\", marginTop:\"80px\"}} className={`d-flex justify-content-center align-items-center`}>\r\n                                \r\n                                        {/* Logo */}\r\n                                        <Image \r\n                                        src={LOGO}\r\n                                        style={{ width: '100px', height: '100px' }}\r\n                                        roundedCircle />\r\n\r\n                                        {/* Tutle */}\r\n                                        <div className=\"h3\" \r\n                                        style={{\r\n                                            backgroundImage: 'linear-gradient(to right, rgb(61, 152, 154) 0%, rgb(12, 14, 36) 100%)',\r\n                                            WebkitBackgroundClip: 'text',\r\n                                            color: 'transparent',\r\n                                            display: 'inline',\r\n                                            whiteSpace: \"nowrap\"\r\n                                        }}>AIoT Smartlock</div>\r\n\r\n                                        {/* Slogan */}\r\n                                        <div className=\"blockquote\" \r\n                                        style={{\r\n                                            backgroundImage: 'linear-gradient(to right, rgb(61, 152, 154) 0%, rgb(12, 14, 36) 100%)',\r\n                                            WebkitBackgroundClip: 'text',\r\n                                            color: 'transparent',\r\n                                            display: 'inline',\r\n                                            textAlign: \"center\"\r\n                                        }}>Create Account</div>\r\n\r\n                                    </Stack> \r\n                                </Col>\r\n                                \r\n                                {/* Registration Form */}\r\n                                <Col xs={12} md={12}>     \r\n                                    <Stack gap={2} className=\"col-md-10 mx-auto\">\r\n\r\n                                        {/* First Name */}\r\n                                        <FloatingLabel\r\n                                        controlId=\"floatingInput\"\r\n                                        label=\"First Name\"\r\n                                        >\r\n                                            <Form.Control \r\n                                            type=\"Text\" \r\n                                            placeholder=\"First Name\"\r\n                                            name=\"FirstName\"\r\n                                            value={userDetails.FirstName}\r\n                                            onChange={handleInputChange}\r\n                                            />\r\n                                        </FloatingLabel>\r\n                                        {error.firstName && <div className=\"text-danger mb-3\">{error.firstNameError}</div>}\r\n\r\n                                        {/* Last Name */}\r\n                                        <FloatingLabel controlId=\"floatingPassword\" label=\"Last Name\" >\r\n                                            <Form.Control \r\n                                            type=\"Text\" \r\n                                            placeholder=\"Last Name\" \r\n                                            name=\"LastName\"\r\n                                            value={userDetails.LastName}\r\n                                            onChange={handleInputChange}    \r\n                                            />\r\n                                        </FloatingLabel>\r\n                                        {error.lastName && <div className=\"text-danger mb-3\">{error.lastNameError}</div>}\r\n\r\n                                        {/* Email */}\r\n                                        <FloatingLabel\r\n                                        controlId=\"floatingInput\"\r\n                                        label=\"Email\"\r\n                            \r\n                                        >\r\n                                            <Form.Control \r\n                                            type=\"email\" \r\n                                            placeholder=\"name@example.com\"\r\n                                            name=\"Email\"\r\n                                            value={userDetails.Email}\r\n                                            onChange={handleInputChange}     \r\n                                            />\r\n                                        </FloatingLabel>\r\n                                        {error.email && <div className=\"text-danger mb-3\">{error.emailError}</div>}\r\n\r\n                                        {/* New Password */}\r\n                                        <FloatingLabel controlId=\"floatingPassword\" label=\"New Password\">\r\n                                            <Form.Control \r\n                                            type=\"password\" \r\n                                            placeholder=\"New Password\" \r\n                                            name=\"NewPassword\"\r\n                                            value={userDetails.NewPassword}\r\n                                            onChange={handleInputChange}   \r\n                                            />\r\n                                        </FloatingLabel>\r\n                                        {error.password && <div className=\"text-danger mb-3\">{error.passwordError}</div>}\r\n\r\n                                    </Stack>\r\n                                </Col>\r\n                                \r\n                                {/* Buttons */}\r\n                                <Col xs={12} md={11} style={{ marginTop:\"15px\", marginBottom:\"100px\"}} className='row row-cols-2 justify-content-center align-items-center'>\r\n                                \r\n                                    {/* Cancel Account */}\r\n                                    <Col xs={12} md={5} sm={12} className='row row-cols-1 m-1'>\r\n                                        <Button \r\n                                        variant=\"primary\" \r\n                                        style={{\r\n                                            background: 'white',\r\n                                            color: 'rgb(61, 152, 154)',\r\n                                            border: \"2px solid rgb(61, 152, 154)\",\r\n                                            padding:\"10px\",\r\n                                            borderRadius:\"10px\"\r\n                                        }}\r\n                                        onClick={()=>navigate(\"/\")}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                    </Col>\r\n\r\n                                    {/* Create Account */}\r\n                                    <Col xs={12} md={5} sm={12} className='row row-cols-1'>\r\n                                        <Button \r\n                                        variant=\"primary\"\r\n                                        style={{\r\n                                            background: 'linear-gradient(to right, rgb(61, 152, 154) 0%, rgb(12, 14, 36) 100%)',\r\n                                            color: 'white',\r\n                                            padding:\"10px\",\r\n                                            borderRadius:\"10px\"\r\n                                        }}\r\n                                        onClick={createAccountss}\r\n                                        >\r\n                                            Sign Up\r\n                                        </Button>\r\n                                    </Col>\r\n                            \r\n                                </Col>\r\n\r\n                            </Row>\r\n\r\n                        </Container>\r\n                    </Container>\r\n                </Container>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RegisterForm","import React from 'react'\r\n\r\nimport RegisterForm from './RegisterForm'\r\n\r\n\r\nconst index = () => {\r\n\r\n  return (\r\n    <div>\r\n      <RegisterForm />\r\n    </div>\r\n )\r\n}\r\n\r\nexport default index"],"names":["props","React","token","setToken","error","setError","Container","fluid","className","styles","Row","xs","Col","md","Stack","gap","style","padding","marginTop","Image","src","LOGO","width","height","roundedCircle","backgroundImage","WebkitBackgroundClip","color","display","whiteSpace","textAlign","FloatingLabel","controlId","label","Form","type","placeholder","value","onChange","e","target","href","marginBottom","sm","Button","variant","background","border","borderRadius","onClick","verifyToken","then","rsult","setTokenShow","status","setLocker","locker","catch","err","tokenShow","navigate","useNavigate","FirstName","LastName","Email","NewPassword","userDetails","setUserDetails","firstName","firstNameError","lastName","lastNameError","email","emailError","password","passwordError","handleInputChange","name","prevUser","createAccountss","event","SignUp_userSchema","abortEarly","createAccount","result","window","location","reload","firstnameError","inner","find","path","lastnameError","message"],"sourceRoot":""}