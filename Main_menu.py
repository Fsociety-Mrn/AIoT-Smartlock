# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'Mainmenu.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Facial_Login import FacialLogin
from Register import facialRegister

class MainWindow(object):
    def setupUi(self, Frame):
        

        # frame
        Frame.setObjectName("Frame")
        Frame.resize(400, 300)
        
        
        self.status = QtWidgets.QLabel(Frame)
        self.status.setGeometry(QtCore.QRect(90, 200, 201, 51))
        self.status.setAlignment(QtCore.Qt.AlignCenter)
        self.status.setObjectName("label")
        
        # Face Login Button
        self.FaceLoginButton = QtWidgets.QPushButton(Frame)
        self.FaceLoginButton.setGeometry(QtCore.QRect(90, 70, 201, 51))
        self.FaceLoginButton.setObjectName("pushButton")
        
        # Facial Register Button
        self.FacialRegisterButton = QtWidgets.QPushButton(Frame)
        self.FacialRegisterButton.setGeometry(QtCore.QRect(90, 140, 201, 51))
        self.FacialRegisterButton.setObjectName("pushButton_2")

        # connect the close event to the method
        Frame.closeEvent = self.closeEvent
        
        self.retranslateUi(Frame)
        QtCore.QMetaObject.connectSlotsByName(Frame)

    def retranslateUi(self, Frame):
        _translate = QtCore.QCoreApplication.translate
        
        Frame.setWindowTitle(_translate("Frame", "Smart AIoT"))
        
        # Face Login Button
        self.FaceLoginButton.setText(_translate("Frame", "Face Login"))
        self.FaceLoginButton.clicked.connect(self.openFacialLogin)
        
        # Facial Register Button
        self.FacialRegisterButton.setText(_translate("Frame", "Facial Register"))
        self.FacialRegisterButton.clicked.connect(self.openFacialRegister)
        
        
        # frame status
        self.status.setText(_translate("Frame", "Status"))
        
    # open facial Login
    def openFacialLogin(self):
        
        self.FaceLoginButton.setText("Loading.............")
        self.FaceLoginButton.isEnabled = False
        self.FacialRegisterButton.isEnabled = False

        # Delay the creation of the FacialLogin object by 100 milliseconds
        QtCore.QTimer.singleShot(100, self.clickFacialLogin)
        
    def clickFacialLogin(self):
        
        print("start loading")
        self.facial_login = QtWidgets.QFrame()
        self.ui = FacialLogin()
        self.ui.setupUi(self.facial_login)
        self.facial_login.show()
        Frame.hide()
        
    # open facial resgister
    def openFacialRegister(self):

        Frame.hide()
        
        self.facial_register = QtWidgets.QFrame()
        self.ui = facialRegister()
        self.ui.setupUi(self.facial_register)
        self.facial_register.show()
        
    # when close the frame
    def closeEvent(self, event):
        # show a message box asking for confirmation
        reply = QtWidgets.QMessageBox.question(None, 'Smart AIoT',
            "Are you sure you want to exit?", QtWidgets.QMessageBox.Yes |
            QtWidgets.QMessageBox.No, QtWidgets.QMessageBox.No)

        # if the user confirms, exit the application
        if reply == QtWidgets.QMessageBox.Yes:
            QtWidgets.qApp.quit()
        else:
            event.ignore()

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Frame = QtWidgets.QFrame()
    ui = MainWindow()
    ui.setupUi(Frame)
    Frame.show()
    sys.exit(app.exec_())
